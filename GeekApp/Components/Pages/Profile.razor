@page "/profile"
@attribute [Authorize]
@using System.Security.Claims
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization
@inject AuthenticationStateProvider AuthStateProvider

<div class="profile-background">
    <div class="profile-card animate-pop">
        <div class="profile-header">
            <h2>👤 Your Profile</h2>
        </div>
        @if (user != null)
        {
            <div class="profile-details">
                <p><strong>Name:</strong> @name</p>
                <p><strong>User ID:</strong> @userId</p>
                <p><strong>Email:</strong> @email</p>
                <p><strong>Registered since:</strong> @registrationDate.ToLocalTime().ToString("f")</p>
            </div>
        }
        else
        {
            <p>Loading profile...</p>
        }
    </div>

@code {
    private ClaimsPrincipal user;
    private string name = "";
    private string email = "";
    private string userId = "";
    private DateTime registrationDate = DateTime.MinValue;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthStateProvider.GetAuthenticationStateAsync();
        user = authState.User;

        if (user.Identity != null && user.Identity.IsAuthenticated)
        {
            name = user.FindFirst("unique_name")?.Value ?? "Unknown";
            email = user.FindFirst("email")?.Value ?? "Unknown";
            userId = user.FindFirst("nameid")?.Value ?? "Unknown";

            var createdAtClaim = user.FindFirst("createdAt")?.Value;
            if (DateTime.TryParse(createdAtClaim, out var parsedDate))
            {
                registrationDate = parsedDate;
            }
        }
    }
}
